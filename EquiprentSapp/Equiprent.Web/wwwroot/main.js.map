{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/login/login.ts","./src/app/components/user-roles/user-role-list.ts","./src/app/components/users/user-list.ts","./src/app/enums/userPermissionEnum.ts","./src/app/interfaces/ui-models.ts","./src/app/layout/app.footer.component.ts","./src/app/layout/app.layout.component.ts","./src/app/layout/app.layout.module.ts","./src/app/layout/app.menu.component.ts","./src/app/layout/app.menu.service.ts","./src/app/layout/app.menuitem.component.ts","./src/app/layout/app.sidebar.component.ts","./src/app/layout/app.topbar.component.ts","./src/app/layout/config/app.config.component.ts","./src/app/layout/config/config.module.ts","./src/app/layout/services/app.layout.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/authentication.service.ts","./src/app/services/authorization.service.ts","./src/app/services/interceptors/api-url-interceptor.ts","./src/app/services/interceptors/auth-interceptor.ts","./src/app/services/menu.service.ts","./src/app/ui-controls/form-validator.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AppLayoutComponent } from './layout/app.layout.component';\nimport { UserListComponent } from './components/users/user-list';\nimport { UserRoleListComponent } from './components/user-roles/user-role-list';\nimport { LoginComponent } from './components/login/login';\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot([\n            {\n                path: 'home', component: AppLayoutComponent,\n                children: [\n                    { path: 'users', component: UserListComponent },\n                    { path: 'administration/user-roles', component: UserRoleListComponent }\n                ]\n            },\n            { path: 'login', component: LoginComponent },\n            { path: '**', redirectTo: 'home' },\n            { path: '', redirectTo: 'home', pathMatch: 'full' },\n        ], { scrollPositionRestoration: 'enabled', anchorScrolling: 'enabled', onSameUrlNavigation: 'reload' })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { AuthenticationService } from './services/authentication.service';\nimport { AuthorizationService } from './services/authorization.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n    public isUserLoggedIn: boolean;\n\n    constructor(private primengConfig: PrimeNGConfig,\n        private translate: TranslateService,\n        private authenticationService: AuthenticationService,\n        private authorizationService: AuthorizationService,\n        private titleService: Title) {\n        this.translate.setDefaultLang('pl');\n        this.isUserLoggedIn = this.authenticationService.isLoggedIn();\n        this.authorizationService.decodeTokenAndSetData();\n    }\n\n    @HostListener('document:keydown.enter', ['$event']) onKeydownHandler(event: KeyboardEvent) {\n        event.preventDefault();\n    }\n\n    ngOnInit() {\n        this.primengConfig.ripple = true;\n        this.titleService.setTitle(\"Equiprent\");\n    }\n}\n","//Angular\nimport { NgModule } from '@angular/core';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { registerLocaleData } from '@angular/common';\nimport localePl from '@angular/common/locales/pl';\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JwtModule } from '@auth0/angular-jwt';\n\n//Application\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppLayoutModule } from './layout/app.layout.module';\nimport { environment } from 'src/environments/environment';\n\n//Services\nimport { MenuService } from './services/menu.service';\nimport { AuthorizationService } from './services/authorization.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { AuthInterceptor } from './services/interceptors/auth-interceptor';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { UserListComponent } from './components/users/user-list';\nimport { LoginComponent } from './components/login/login';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//primeng\nimport { ButtonModule } from 'primeng/button';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { PasswordModule } from 'primeng/password';\nimport { MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { ApiUrlInterceptor } from './services/interceptors/api-url-interceptor';\n\nregisterLocaleData(localePl, 'pl');\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = {};\n\n@NgModule({\n    declarations: [\n        //[start] app components\n        AppComponent,\n        //[end] app components\n        //[start] custom components\n        LoginComponent,\n        UserListComponent\n        //[end] custom components\n    ],\n    imports: [\n        //[start] app modules\n        AppLayoutModule,\n        BrowserModule,\n        HttpClientModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: jwtTokenGetter\n            }\n        }),\n        NgxMaskModule.forRoot(options),\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        AppRoutingModule,\n        ReactiveFormsModule,\n        //[end] app modules\n        //[start] primeng Modules\n        ButtonModule,\n        CheckboxModule,\n        PasswordModule,\n        ToastModule\n        //[end] primeng Modules\n    ],\n    providers: [\n        //[start] app services\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        MenuService,\n        AuthorizationService,\n        AuthenticationService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: AuthInterceptor,\n            multi: true\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiUrlInterceptor,\n            multi: true\n        },\n        AuthGuard,\n        MessageService\n        //[end] app services\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function jwtTokenGetter() {\n    return localStorage.getItem(environment.auth_key_name);\n}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http);\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { SignInModel } from 'src/app/interfaces/authentication';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { FormValidator } from 'src/app/ui-controls/form-validator';\r\n\r\n@Component({\r\n  selector: \"login\",\r\n  templateUrl: \"./login.html\"\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  formValidator: FormValidator;\r\n\r\n  constructor(public translate: TranslateService,\r\n    private formBuilder: FormBuilder,\r\n    private titleService: Title,\r\n    private messageService: MessageService,\r\n    private authenticationService: AuthenticationService,\r\n    private app: AppComponent,\r\n    private router: Router) {\r\n\r\n    this.translate.setDefaultLang('pl');\r\n    this.titleService.setTitle(translate.instant(\"AppName\"));\r\n\r\n    this.createForm();\r\n    this.formValidator = new FormValidator(this.form);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      Login: ['', Validators.required],\r\n      Password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.form.value.Login) {\r\n      this.messageService.add({ key: 'tst', severity: 'error', summary: this.translate.instant('General.Error'), detail: this.translate.instant('Messages.EnterLoginFirst') });\r\n      return;\r\n    }\r\n\r\n    var data = <SignInModel>{};\r\n    data.Login = this.form.value.Login;\r\n    data.Password = this.form.value.Password;\r\n\r\n    this.authenticationService.login(data).subscribe((result) => {\r\n      if (result == \"OK\") {\r\n        this.app.isUserLoggedIn = true;\r\n        this.router.navigate(['home']);\r\n      }\r\n      else if (result == \"NotActive\") {\r\n        this.messageService.add({ severity: 'error', summary: this.translate.instant('Messages.AccountNotActive') });\r\n        this.messageService.add({ severity: 'error', summary: this.translate.instant('Messages.PleaseContactAdmin') });\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: this.translate.instant('Messages.InvalidLoginData') });\r\n      }\r\n    });\r\n  }\r\n\r\n  resetPassword() {\r\n    this.router.navigate(['login/reset-password'], { queryParams: { 'token': '' } });\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: \"user-role-list\",\r\n  templateUrl: \"./user-role-list.html\"\r\n})\r\nexport class UserRoleListComponent implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: \"user-list\",\r\n  templateUrl: \"./user-list.html\"\r\n})\r\nexport class UserListComponent implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}","export enum UserPermissionEnum {\r\n  ForAll = 0,\r\n  Users_CanList = 1,\r\n  Users_CanModify = 2,\r\n  UserRoles_CanList = 3,\r\n  UserRoles_CanModify = 4\r\n}","export class Menu {\r\n    Permissions?: number[];\r\n    Label: string;\r\n    Icon?: string;\r\n    RouterLink?: string[];\r\n    Items?: Menu[];\r\n}","import { Component } from '@angular/core';\nimport { LayoutService } from \"./services/app.layout.service\";\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './app.footer.component.html'\n})\nexport class AppFooterComponent {\n    constructor(public layoutService: LayoutService) { }\n}\n","import { Component, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, Subscription } from 'rxjs';\nimport { LayoutService } from \"./services/app.layout.service\";\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppTopBarComponent } from './app.topbar.component';\nimport { AuthorizationService } from '../services/authorization.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './app.layout.component.html',\n})\nexport class AppLayoutComponent implements OnDestroy {\n\n    overlayMenuOpenSubscription: Subscription;\n    menuOutsideClickListener: any;\n    profileMenuOutsideClickListener: any;\n    isUserLoggedIn: boolean;\n\n    @ViewChild(AppSidebarComponent) appSidebar!: AppSidebarComponent;\n    @ViewChild(AppTopBarComponent) appTopbar!: AppTopBarComponent;\n\n    constructor(public layoutService: LayoutService,\n        public renderer: Renderer2,\n        public router: Router,\n        private authenticationService: AuthenticationService,\n        private authorizationService: AuthorizationService) {\n\n        this.isUserLoggedIn = authenticationService.isLoggedIn();\n\n        if (!this.isUserLoggedIn) {\n            this.router.navigate(['login']);\n        }\n        else {\n            this.overlayMenuOpenSubscription = this.layoutService.overlayOpen$.subscribe(() => {\n                if (!this.menuOutsideClickListener) {\n                    this.menuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n                        const isOutsideClicked = !(this.appSidebar.el.nativeElement.isSameNode(event.target) || this.appSidebar.el.nativeElement.contains(event.target)\n                            || this.appTopbar.menuButton.nativeElement.isSameNode(event.target) || this.appTopbar.menuButton.nativeElement.contains(event.target));\n\n                        if (isOutsideClicked) {\n                            this.hideMenu();\n                        }\n                    });\n                }\n\n                if (!this.profileMenuOutsideClickListener) {\n                    this.profileMenuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n                        const isOutsideClicked = !(this.appTopbar.menu.nativeElement.isSameNode(event.target) || this.appTopbar.menu.nativeElement.contains(event.target)\n                            || this.appTopbar.topbarMenuButton.nativeElement.isSameNode(event.target) || this.appTopbar.topbarMenuButton.nativeElement.contains(event.target));\n\n                        if (isOutsideClicked) {\n                            this.hideProfileMenu();\n                        }\n                    });\n                }\n\n                if (this.layoutService.state.staticMenuMobileActive) {\n                    this.blockBodyScroll();\n                }\n            });\n\n            this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n                .subscribe(() => {\n                    this.hideMenu();\n                    this.hideProfileMenu();\n                });\n        }\n    }\n\n    hideMenu() {\n        this.layoutService.state.overlayMenuActive = false;\n        this.layoutService.state.staticMenuMobileActive = false;\n        this.layoutService.state.menuHoverActive = false;\n        if (this.menuOutsideClickListener) {\n            this.menuOutsideClickListener();\n            this.menuOutsideClickListener = null;\n        }\n        this.unblockBodyScroll();\n    }\n\n    hideProfileMenu() {\n        this.layoutService.state.profileSidebarVisible = false;\n        if (this.profileMenuOutsideClickListener) {\n            this.profileMenuOutsideClickListener();\n            this.profileMenuOutsideClickListener = null;\n        }\n    }\n\n    blockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.add('blocked-scroll');\n        }\n        else {\n            document.body.className += ' blocked-scroll';\n        }\n    }\n\n    unblockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.remove('blocked-scroll');\n        }\n        else {\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\n                'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n\n    get containerClass() {\n        return {\n            'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n            'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n            'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n            'layout-static': this.layoutService.config.menuMode === 'static',\n            'layout-static-inactive': this.layoutService.state.staticMenuDesktopInactive && this.layoutService.config.menuMode === 'static',\n            'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n            'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n            'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n            'p-ripple-disabled': !this.layoutService.config.ripple\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.overlayMenuOpenSubscription) {\n            this.overlayMenuOpenSubscription.unsubscribe();\n        }\n\n        if (this.menuOutsideClickListener) {\n            this.menuOutsideClickListener();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { BadgeModule } from 'primeng/badge';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { RippleModule } from 'primeng/ripple';\nimport { AppMenuComponent } from './app.menu.component';\nimport { AppMenuitemComponent } from './app.menuitem.component';\nimport { RouterModule } from '@angular/router';\nimport { AppTopBarComponent } from './app.topbar.component';\nimport { AppFooterComponent } from './app.footer.component';\nimport { AppConfigModule } from './config/config.module';\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppLayoutComponent } from \"./app.layout.component\";\n\n@NgModule({\n    declarations: [\n        AppMenuitemComponent,\n        AppTopBarComponent,\n        AppFooterComponent,\n        AppMenuComponent,\n        AppSidebarComponent,\n        AppLayoutComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        InputTextModule,\n        SidebarModule,\n        BadgeModule,\n        RadioButtonModule,\n        InputSwitchModule,\n        RippleModule,\n        RouterModule,\n        AppConfigModule\n    ],\n    exports: [AppLayoutComponent]\n})\nexport class AppLayoutModule { }\n","import { OnInit } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Menu } from '../interfaces/ui-models';\nimport { LayoutService } from './services/app.layout.service';\nimport { AuthorizationService } from '../services/authorization.service';\nimport { MenuService } from '../services/menu.service';\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './app.menu.component.html'\n})\nexport class AppMenuComponent implements OnInit {\n\n    users: Menu = new Menu();\n    userRoles: Menu = new Menu();\n\n    model: any[] = [];\n\n    constructor(public layoutService: LayoutService,\n        private router: Router,\n        private menuService: MenuService,\n        private authorizationService: AuthorizationService,\n        private translate: TranslateService) {\n        this.translate.use('pl').subscribe(x => {\n            this.buildMenu()\n        });\n        this.router.events.forEach(() => {\n            this.buildMenu();\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    buildMenu() {\n        this.authorizationService.decodeTokenAndSetData();\n        this.model = [];\n\n        var menu = this.menuService.getMenu();\n\n        menu.forEach(menu => this.appendMenu(menu));\n\n        this.model = [...this.model];\n    }\n\n    appendMenu(menu: Menu) {\n        if (!this.model) {\n            return;\n        }\n\n        var allMenuPermissions: number[] = [];\n        menu.Items?.forEach(menuItem => menuItem.Permissions?.forEach(permission => allMenuPermissions.push(permission)));\n\n        //TODO\n        var isAuthorized = this.isAuthorized(allMenuPermissions) || true;\n\n        if (isAuthorized) {\n\n            var menuItems: { label: string; icon: string | undefined; routerLink: string[] | undefined; }[] = [];\n            menu.Items?.forEach(x => menuItems.push({\n                label: this.translate.instant(x.Label),\n                icon: x.Icon,\n                routerLink: x.RouterLink\n            }));\n\n            this.model.push({\n                label: this.translate.instant(menu.Label),\n                items: menuItems\n            });\n        }\n    }\n\n    appendMenuItem(menuItemLabel: string, permissions: number[], label: string, icon: string, routerLink?: string[]) {\n        if (!this.model) {\n            return;\n        }\n\n        var isAuthorized = this.isAuthorized(permissions) || true;\n\n        if (isAuthorized) {\n            var menuItem = this.model.find(x => x.label == this.translate.instant(menuItemLabel));\n\n            if (menuItem) {\n                if (!menuItem.items) {\n                    menuItem.items = [];\n                }\n\n                menuItem.items = menuItem.items.concat([\n                    { label: this.translate.instant(label), icon: icon, routerLink: routerLink }\n                ]);\n            }\n        }\n    }\n\n    private isAuthorized(permissions: number[]): boolean {\n        var isAuthorized = false;\n\n        for (const permission of permissions) {\n            if (this.authorizationService.isAuthorized([permission])) {\n                isAuthorized = true;\n                break;\n            }\n        }\n\n        return isAuthorized;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from './api/menuchangeevent';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenuService {\n\n    private menuSource = new Subject<MenuChangeEvent>();\n    private resetSource = new Subject();\n\n    menuSource$ = this.menuSource.asObservable();\n    resetSource$ = this.resetSource.asObservable();\n\n    onMenuStateChange(event: MenuChangeEvent) {\n        this.menuSource.next(event);\n    }\n\n    reset() {\n        this.resetSource.next(true);\n    }\n}\n","import { ChangeDetectorRef, Component, Host, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { MenuService } from './app.menu.service';\nimport { LayoutService } from './services/app.layout.service';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: '[app-menuitem]',\n    template: `\n\t\t<ng-container>\n            <div *ngIf=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{item.label}}</div>\n\t\t\t<a *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\" [attr.href]=\"item.url\" (click)=\"itemClick($event)\"\n\t\t\t   [ngClass]=\"item.class\" [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t\t\t</a>\n\t\t\t<a *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" (click)=\"itemClick($event)\" [ngClass]=\"item.class\" \n\t\t\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-route\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{ paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' }\"\n               [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" \n               [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" [queryParams]=\"item.queryParams\"\n               [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t\t\t</a>\n\n\t\t\t<ul *ngIf=\"item.items && item.visible !== false\" [@children]=\"submenuAnimation\">\n\t\t\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n\t\t\t\t\t<li app-menuitem [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\"></li>\n\t\t\t\t</ng-template>\n\t\t\t</ul>\n\t\t</ng-container>\n    `,\n    animations: [\n        trigger('children', [\n            state('collapsed', style({\n                height: '0'\n            })),\n            state('expanded', style({\n                height: '*'\n            })),\n            transition('collapsed <=> expanded', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class AppMenuitemComponent implements OnInit, OnDestroy {\n\n    @Input() item: any;\n\n    @Input() index!: number;\n\n    @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n    @Input() parentKey!: string;\n\n    active = false;\n\n    menuSourceSubscription: Subscription;\n\n    menuResetSubscription: Subscription;\n\n    key: string = \"\";\n\n    constructor(public layoutService: LayoutService, private cd: ChangeDetectorRef, public router: Router, private menuService: MenuService) {\n        this.menuSourceSubscription = this.menuService.menuSource$.subscribe(value => {\n            Promise.resolve(null).then(() => {\n                if (value.routeEvent) {\n                    this.active = (value.key === this.key || value.key.startsWith(this.key + '-')) ? true : false;\n                }\n                else {\n                    if (value.key !== this.key && !value.key.startsWith(this.key + '-')) {\n                        this.active = false;\n                    }\n                }\n            });\n        });\n\n        this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n            this.active = false;\n        });\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(params => {\n                if (this.item.routerLink) {\n                    this.updateActiveStateFromRoute();\n                }\n            });\n    }\n\n    ngOnInit() {\n        this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\n\n        if (this.item.routerLink) {\n            this.updateActiveStateFromRoute();\n        }\n    }\n\n    updateActiveStateFromRoute() {\n        let activeRoute = this.router.isActive(this.item.routerLink[0], { paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' });\n\n        if (activeRoute) {\n            this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n        }\n    }\n\n    itemClick(event: Event) {\n        // avoid processing disabled items\n        if (this.item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        // execute command\n        if (this.item.command) {\n            this.item.command({ originalEvent: event, item: this.item });\n        }\n\n        // toggle active state\n        if (this.item.items) {\n            this.active = !this.active;\n        }\n\n        this.menuService.onMenuStateChange({ key: this.key });\n    }\n\n    get submenuAnimation() {\n        return this.root ? 'expanded' : (this.active ? 'expanded' : 'collapsed');\n    }\n\n    @HostBinding('class.active-menuitem') \n    get activeClass() {\n        return this.active && !this.root;\n    }\n\n    ngOnDestroy() {\n        if (this.menuSourceSubscription) {\n            this.menuSourceSubscription.unsubscribe();\n        }\n\n        if (this.menuResetSubscription) {\n            this.menuResetSubscription.unsubscribe();\n        }\n    }\n}\n","import { Component, ElementRef } from '@angular/core';\nimport { LayoutService } from \"./services/app.layout.service\";\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './app.sidebar.component.html'\n})\nexport class AppSidebarComponent {\n    constructor(public layoutService: LayoutService, public el: ElementRef) { }\n}\n\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { AppComponent } from '../app.component';\nimport { LayoutService } from \"./services/app.layout.service\";\n\n@Component({\n    selector: 'app-topbar',\n    templateUrl: './app.topbar.component.html'\n})\nexport class AppTopBarComponent {\n\n    items!: MenuItem[];\n\n    @ViewChild('menubutton') menuButton!: ElementRef;\n    @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n    @ViewChild('topbarmenu') menu!: ElementRef;\n\n    constructor(public layoutService: LayoutService, public app: AppComponent) { }\n}\n","import { Component, Input } from '@angular/core';\nimport { LayoutService } from \"../services/app.layout.service\";\nimport { MenuService } from \"../app.menu.service\";\n\n@Component({\n    selector: 'app-config',\n    templateUrl: './app.config.component.html'\n})\nexport class AppConfigComponent {\n\n    @Input() minimal: boolean = false;\n\n    scales: number[] = [12, 13, 14, 15, 16];\n\n    constructor(public layoutService: LayoutService, public menuService: MenuService) { }\n\n    get visible(): boolean {\n        return this.layoutService.state.configSidebarVisible;\n    }\n\n    set visible(_val: boolean) {\n        this.layoutService.state.configSidebarVisible = _val;\n    }\n\n    get scale(): number {\n        return this.layoutService.config.scale;\n    }\n\n    set scale(_val: number) {\n        this.layoutService.config.scale = _val;\n    }\n\n    get menuMode(): string {\n        return this.layoutService.config.menuMode;\n    }\n\n    set menuMode(_val: string) {\n        this.layoutService.config.menuMode = _val;\n    }\n\n    get inputStyle(): string {\n        return this.layoutService.config.inputStyle;\n    }\n\n    set inputStyle(_val: string) {\n        this.layoutService.config.inputStyle = _val;\n    }\n\n    get ripple(): boolean {\n        return this.layoutService.config.ripple;\n    }\n\n    set ripple(_val: boolean) {\n        this.layoutService.config.ripple = _val;\n    }\n\n    onConfigButtonClick() {\n        this.layoutService.showConfigSidebar();\n    }\n\n    changeTheme(theme: string, colorScheme: string) {\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const newHref = themeLink.getAttribute('href')!.replace(this.layoutService.config.theme, theme);\n        this.layoutService.config.colorScheme\n        this.replaceThemeLink(newHref, () => {\n            this.layoutService.config.theme = theme;\n            this.layoutService.config.colorScheme = colorScheme;\n            this.layoutService.onConfigUpdate();\n        });\n    }\n\n    replaceThemeLink(href: string, onComplete: Function) {\n        const id = 'theme-css';\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-css');\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n            onComplete();\n        });\n    }\n\n    decrementScale() {\n        this.scale--;\n        this.applyScale();\n    }\n\n    incrementScale() {\n        this.scale++;\n        this.applyScale();\n    }\n\n    applyScale() {\n        document.documentElement.style.fontSize = this.scale + 'px';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { AppConfigComponent } from './app.config.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SidebarModule,\n        RadioButtonModule,\n        ButtonModule,\n        InputSwitchModule\n    ],\n    declarations: [\n        AppConfigComponent\n    ],\n    exports: [\n        AppConfigComponent\n    ]\n})\nexport class AppConfigModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface AppConfig {\n    inputStyle: string;\n    colorScheme: string;\n    theme: string;\n    ripple: boolean;\n    menuMode: string;\n    scale: number;\n}\n\ninterface LayoutState {\n    staticMenuDesktopInactive: boolean;\n    overlayMenuActive: boolean;\n    profileSidebarVisible: boolean;\n    configSidebarVisible: boolean;\n    staticMenuMobileActive: boolean;\n    menuHoverActive: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LayoutService {\n\n    config: AppConfig = {\n        ripple: false,\n        inputStyle: 'outlined',\n        menuMode: 'static',\n        colorScheme: 'light',\n        theme: 'lara-light-indigo',\n        scale: 14,\n    };\n\n    state: LayoutState = {\n        staticMenuDesktopInactive: false,\n        overlayMenuActive: false,\n        profileSidebarVisible: false,\n        configSidebarVisible: false,\n        staticMenuMobileActive: false,\n        menuHoverActive: false\n    };\n\n    private configUpdate = new Subject<AppConfig>();\n\n    private overlayOpen = new Subject<any>();\n\n    configUpdate$ = this.configUpdate.asObservable();\n\n    overlayOpen$ = this.overlayOpen.asObservable();\n\n    onMenuToggle() {\n        if (this.isOverlay()) {\n            this.state.overlayMenuActive = !this.state.overlayMenuActive;\n            if (this.state.overlayMenuActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n\n        if (this.isDesktop()) {\n            this.state.staticMenuDesktopInactive = !this.state.staticMenuDesktopInactive;\n        }\n        else {\n            this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n            if (this.state.staticMenuMobileActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n    }\n\n    showProfileSidebar() {\n        this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n        if (this.state.profileSidebarVisible) {\n            this.overlayOpen.next(null);\n        }\n    }\n\n    showConfigSidebar() {\n        this.state.configSidebarVisible = true;\n    }\n\n    isOverlay() {\n        return this.config.menuMode === 'overlay';\n    }\n\n    isDesktop() {\n        return window.innerWidth > 991;\n    }\n\n    isMobile() {\n        return !this.isDesktop();\n    }\n\n    onConfigUpdate() {\n        this.configUpdate.next(this.config);\n    }\n\n}\n","import { AuthorizationService } from './authorization.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n  constructor(private router: Router, private authorizationService: AuthorizationService){\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const allowedPermissions = next.data['allowedPermissions'];\r\n    const isAuthorized = this.authorizationService.isAuthorized(allowedPermissions);\r\n    if (!isAuthorized) {\r\n      this.authorizationService.decodeTokenAndSetData();\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.authorizationService.decodeTokenAndSetData();\r\n    return isAuthorized;\r\n  }\r\n\r\n  canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const allowedPermissions = next.data['allowedPermissions'];\r\n    const isAuthorized = this.authorizationService.isAuthorized(allowedPermissions);\r\n  \r\n    if (!isAuthorized) {\r\n      this.authorizationService.resetAllData();\r\n      this.router.navigate(['login']);\r\n    }\r\n    this.authorizationService.decodeTokenAndSetData();\r\n    return isAuthorized\r\n  }\r\n}","import { AuthorizationService } from './authorization.service';\r\nimport { SignInModel } from '../interfaces/authentication';\r\nimport { Inject, Injectable, PLATFORM_ID } from \"@angular/core\";\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n    isLoggedIn$: Observable<boolean>\r\n\r\n    constructor(private authorizationService: AuthorizationService, private httpClient: HttpClient,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n    }\r\n\r\n    // performs the login\r\n    login(authData: SignInModel): Observable<string> {\r\n        var url = \"token/authenticate\";\r\n        var data = {\r\n            username: authData.Login,\r\n            password: authData.Password,\r\n            // required when signing up with username/password\r\n            grant_type: \"password\",\r\n            // space-separated list of scopes for which the token is issued\r\n            scope: \"offline_access profile email\"\r\n        };\r\n\r\n        return this.httpClient.post<TokenResponse>(url, data).pipe(\r\n            map(res => {\r\n                let token = res && res.token;\r\n                if (res.code == CustomResponeCode.NotActice) {\r\n                    return \"NotActice\";\r\n                }\r\n                else if (res.code != 200) {\r\n                    return \"Error\";\r\n                }\r\n\r\n                // if the token is there, login has been successful\r\n                if (token) {\r\n                    // store username and jwt token\r\n                    this.setAuth(res);\r\n                    this.authorizationService.decodeTokenAndSetData();\r\n                    // successful login\r\n                    return \"OK\";\r\n                }\r\n                return \"Error\";\r\n                // failed login\r\n            }),\r\n            catchError(error => {\r\n                console.log(error);\r\n                return new Observable<any>(error);\r\n            }));\r\n    }\r\n\r\n    // performs the logout\r\n    logout(): boolean {\r\n        this.setAuth(null);\r\n        this.authorizationService.resetAllData();\r\n        return true;\r\n    }\r\n\r\n    refreshToken(): Observable<string> {\r\n        var url = \"token/refreshToken\";\r\n        const tokenData = JSON.parse(localStorage.getItem(environment.auth_key_name) || '') as TokenResponse;\r\n\r\n        var data = {\r\n            Token: tokenData.token,\r\n            RefreshToken: tokenData.refreshToken\r\n        };\r\n\r\n        return this.httpClient.post<TokenResponse>(url, data).pipe(\r\n            map(res => {\r\n                this.setAuth(res);\r\n                this.authorizationService.decodeTokenAndSetData();\r\n                return \"OK\";\r\n            }),\r\n            catchError(error => {\r\n                console.log(error);\r\n                return new Observable<any>(error);\r\n            }));\r\n    }\r\n\r\n    // Persist auth into localStorage or removes it if a NULL argument is given\r\n    setAuth(auth: TokenResponse | null): boolean {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (auth) {\r\n                localStorage.setItem(\r\n                    environment.auth_key_name,\r\n                    JSON.stringify(auth));\r\n                this.isLoggedIn$ = of(true);\r\n            }\r\n            else {\r\n                localStorage.removeItem(environment.auth_key_name);\r\n                this.isLoggedIn$ = of(false);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Retrieves the auth JSON object (or NULL if none)\r\n    getAuth(): TokenResponse | null {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            var i = localStorage.getItem(environment.auth_key_name);\r\n            if (i) {\r\n                return JSON.parse(i);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Returns TRUE if the user is logged in, FALSE otherwise.\r\n    isLoggedIn(): boolean {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            return localStorage.getItem(environment.auth_key_name) != null;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // refreshToken(): Observable<boolean> {\r\n    //     var url = \"api/token/authenticate\";\r\n    //     var data = {\r\n    //         client_id: this.clientId,\r\n    //         // required when signing up with username/password\r\n    //         grant_type: \"refresh_token\",\r\n    //         refresh_token: this.getAuth()!.refresh_token,\r\n    //         // space-separated list of scopes for which the token is issued\r\n    //         scope: \"offline_access profile email\"\r\n    //     };\r\n    //     return this.getAuthFromServer(url, data);\r\n    // }\r\n\r\n    // // retrieve the access & refresh tokens from the server\r\n    // getAuthFromServer(url: string, data: any): Observable<boolean> {\r\n    //     return this.httpClient.post<TokenResponse>(url, data)\r\n    //         .map((res) => {\r\n    //             let token = res && res.token;\r\n    //             // if the token is there, login has been successful\r\n    //             if (token) {\r\n    //                 // store username and jwt token\r\n    //                 this.setAuth(res);\r\n    //                 // successful login\r\n    //                 return true;\r\n    //             }\r\n    //             // failed login\r\n    //             return Observable.throw('Unauthorized');\r\n    //         })\r\n    //         .catch(error => {\r\n    //             return new Observable<any>(error);\r\n    //         });\r\n    // }\r\n}\r\n\r\ninterface TokenResponse {\r\n    token: string;\r\n    refreshToken: string;\r\n    expiration: number;\r\n    code: number;\r\n}\r\n\r\nenum CustomResponeCode {\r\n    NotActice = 165\r\n}","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n  private static _currentUserId?: number;\r\n  private static _currentUserName?: string;\r\n  private static _currentUserLanguageId?: number;\r\n  private static _currentUserRoleId?: number;\r\n  private static _currentUserRoleName?: string;\r\n  private static _currentUserPermissions?: number[];\r\n  private static _currentUserRoles?: string[];\r\n\r\n  //property let to use static properties.\r\n  AS = AuthorizationService;\r\n\r\n  public static get currentUserId(): number | undefined {\r\n    return this._currentUserId;\r\n  }\r\n\r\n  public static get currentUserName(): string | undefined {\r\n    return this._currentUserName;\r\n  }\r\n\r\n  public static get currentUserRoles(): string[] | undefined {\r\n    return this._currentUserRoles;\r\n  }\r\n\r\n  public static get currentUserLanguageId(): number | undefined {\r\n    return this._currentUserLanguageId;\r\n  }\r\n\r\n  public static get currentUserRoleId(): number | undefined {\r\n    return this._currentUserRoleId;\r\n  }\r\n\r\n  public static get currentUserRoleName(): string | undefined {\r\n    return this._currentUserRoleName;\r\n  }\r\n\r\n  public static get currentUserPermissions(): number[] | undefined {\r\n    return this._currentUserPermissions;\r\n  }\r\n\r\n  constructor(private jwtHelperService: JwtHelperService) {\r\n  }\r\n\r\n  isAuthorized(allowedPermissions: number[]): boolean {\r\n    // check if the list of allowed permissions is empty, if empty, authorize the user to access the page\r\n    if (allowedPermissions == null || allowedPermissions.length === 0) {\r\n      return true;\r\n    }\r\n    const decodedToken = this.decodeToken();\r\n    // check if it was decoded successfully, if not the token is not valid, deny access\r\n    if (!decodedToken) {\r\n      console.log('Invalid token');\r\n      return false;\r\n    }\r\n    // check if the user roles is in the list of allowed permissions, return true if allowed and false if not allowed\r\n    var permissions: number[] = [];\r\n    var permissionsStr = (decodedToken['permissions'] as string).split(',');\r\n\r\n    permissionsStr.forEach(str => {\r\n      permissions.push(Number(str))\r\n    });\r\n\r\n    return allowedPermissions.some(r=> permissions.includes(r));\r\n  }\r\n\r\n  decodeToken() {\r\n    const token = localStorage.getItem(environment.auth_key_name);\r\n    return this.jwtHelperService.decodeToken(token || '');\r\n  }\r\n\r\n  decodeTokenAndSetData() {\r\n    const decodedToken = this.decodeToken();\r\n    if (decodedToken) {\r\n      AuthorizationService._currentUserId = Number(decodedToken['sub']);\r\n      AuthorizationService._currentUserName = decodedToken['given_name'];\r\n      AuthorizationService._currentUserLanguageId = decodedToken['userlanguageid'];\r\n      AuthorizationService._currentUserRoleId = decodedToken['userroleid'];\r\n      AuthorizationService._currentUserRoleName = decodedToken['userrolename'];\r\n      AuthorizationService._currentUserRoles = decodedToken['role'];      \r\n      AuthorizationService._currentUserPermissions = [];\r\n      var currentUserPermissionsStr = (decodedToken['permissions'] as string).split(',');\r\n      currentUserPermissionsStr.forEach(str => {\r\n        AuthorizationService._currentUserPermissions?.push(Number(str))\r\n      });      \r\n    }\r\n    else {\r\n      this.resetAllData();\r\n    }\r\n  }\r\n\r\n  resetAllData() {\r\n    AuthorizationService._currentUserId = undefined;\r\n    AuthorizationService._currentUserName = undefined;\r\n    AuthorizationService._currentUserLanguageId = undefined;\r\n    AuthorizationService._currentUserRoleId = undefined;\r\n    AuthorizationService._currentUserRoleName = undefined;\r\n    AuthorizationService._currentUserRoles = undefined;\r\n    AuthorizationService._currentUserPermissions = undefined;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable()\r\nexport class ApiUrlInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var apiReq = undefined;\r\n        if (req.url.includes('assets/i18n')) {\r\n            if (location.protocol == 'https:') {\r\n                apiReq = req.clone({ url: `https://${window.location.host}${req.url}` });\r\n            }\r\n            else {\r\n                apiReq = req.clone({ url: `http://${window.location.host}${req.url}` });\r\n            }\r\n        }\r\n        else {\r\n            apiReq = req.clone({ url: `${environment.apiUrl}${req.url}` });\r\n        }\r\n        return next.handle(apiReq);\r\n    }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { HttpHandler, HttpEvent, HttpInterceptor, HttpRequest, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { AuthenticationService } from \"../authentication.service\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, tap } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    isRefreshingToken: boolean;\r\n\r\n    constructor(private injector: Injector) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var auth = this.injector.get(AuthenticationService);\r\n        var token = (auth.isLoggedIn()) ? auth.getAuth()!.token : null;\r\n        if (token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                if (error.status == 401 && !this.isRefreshingToken) {\r\n                    this.isRefreshingToken = true;\r\n                    console.log(\"refreshing token...\");\r\n\r\n                    auth.refreshToken().subscribe(result => {\r\n                        console.log(\"token refreshed with result: \" + result);\r\n                        this.isRefreshingToken = false;\r\n                        if (result == \"OK\") {\r\n                            window.location.reload();\r\n                            return tap(x => \"OK\");\r\n                        }\r\n                        else {\r\n                            console.error(error);\r\n                            return throwError(error.message);\r\n                        }\r\n                    });\r\n                }\r\n                console.error(error);\r\n                return throwError(error.message);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Menu } from \"src/app/interfaces/ui-models\";\r\nimport { UserPermissionEnum } from \"../enums/userPermissionEnum\";\r\nimport { AuthorizationService } from \"./authorization.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n  private static ALL_MENU_URL_PREFIX = '/home';\r\n  private menu: Menu[] = [];\r\n\r\n  constructor(private authorizationService: AuthorizationService) {\r\n    this.initializeMenu();\r\n    this.initializeMenuItems();\r\n  }\r\n\r\n  initializeMenu() {\r\n\r\n    //MENU\r\n    this.menu.push({\r\n      Label: \"Menu.Title\",\r\n      Items: []\r\n    });\r\n\r\n    //ADMINISTRATION\r\n    this.menu.push({\r\n      Label: \"Menu.Administration\",\r\n      Items: []\r\n    });\r\n  }\r\n\r\n  initializeMenuItems() {\r\n\r\n    //MENU - USERS\r\n    this.menu.find(m => m.Label == \"Menu.Title\")?.Items?.push({\r\n      Permissions: [\r\n        UserPermissionEnum.Users_CanList\r\n      ],\r\n      Label: \"Menu.Users\",\r\n      Icon: 'fa fa-solid fa-user',\r\n      RouterLink: [`${MenuService.ALL_MENU_URL_PREFIX}/users`]\r\n    });\r\n\r\n    //ADMINISTRATION - USER ROLES\r\n    this.menu.find(m => m.Label == \"Menu.Administration\")?.Items?.push({\r\n      Permissions: [\r\n        UserPermissionEnum.UserRoles_CanList\r\n      ],\r\n      Label: \"Menu.UserRoles\",\r\n      Icon: 'fa fa-solid fa-users',\r\n      RouterLink: [`${MenuService.ALL_MENU_URL_PREFIX}/administration/user-roles`]\r\n    });\r\n  }\r\n\r\n  getMenu(): Menu[] {\r\n    return this.menu;\r\n  }\r\n\r\n  getFirstMenuItemUserIsAuthorizedFor(): Menu | undefined {\r\n\r\n    var firstMenuUserIsAuthorizedFor = undefined;\r\n\r\n    for (const menu of this.menu) {\r\n      for (const menuItem of menu.Items || [])\r\n      {\r\n        if (this.authorizationService.isAuthorized(menuItem.Permissions || [])) {\r\n          firstMenuUserIsAuthorizedFor = menu;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return firstMenuUserIsAuthorizedFor;\r\n  }\r\n}","import { FormGroup } from '@angular/forms';\r\n\r\nexport class FormValidator {\r\n  form: FormGroup;\r\n  constructor(currentForm: FormGroup) {\r\n    this.form = currentForm;\r\n  }\r\n  // retrieve a FormControl\r\n  getFormControl(name: string) {\r\n    return this.form.get(name);\r\n  }\r\n  // returns TRUE if the FormControl is valid\r\n  isValid(name: string) {\r\n    var e = this.getFormControl(name);\r\n    return e && e.valid;\r\n  }\r\n  // returns TRUE if the FormControl has been changed\r\n  isChanged(name: string) {\r\n    var e = this.getFormControl(name);\r\n    return e && (e.dirty || e.touched);\r\n  }\r\n  // returns TRUE if the FormControl is invalid after user changes\r\n  hasError(name: string) {\r\n    var e = this.getFormControl(name);\r\n    return e && (e.dirty || e.touched) && !e.valid;\r\n  }\r\n\r\n  updateAllControlsToTouched() {\r\n    if (this.form) {\r\n      Object.keys(this.form.controls).forEach(key => {\r\n        this.form.get(key)!.markAsTouched();\r\n      });\r\n    }\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:61869/api/',\n  auth_key_name: \"Equiprent\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","/// <reference types=\"@angular/localize\" />\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","NgModule","AppLayoutComponent","UserListComponent","UserRoleListComponent","LoginComponent","AppRoutingModule","imports","forRoot","path","component","children","redirectTo","pathMatch","scrollPositionRestoration","anchorScrolling","onSameUrlNavigation","exports","Component","HostListener","Title","TranslateService","PrimeNGConfig","AuthenticationService","AuthorizationService","AppComponent","constructor","primengConfig","translate","authenticationService","authorizationService","titleService","setDefaultLang","isUserLoggedIn","isLoggedIn","decodeTokenAndSetData","onKeydownHandler","event","preventDefault","ngOnInit","ripple","setTitle","args","selector","template","HashLocationStrategy","LocationStrategy","registerLocaleData","localePl","NgxMaskModule","TranslateLoader","TranslateModule","TranslateHttpLoader","HttpClient","HttpClientModule","HTTP_INTERCEPTORS","BrowserModule","JwtModule","AppLayoutModule","environment","MenuService","AuthInterceptor","AuthGuard","ReactiveFormsModule","ButtonModule","CheckboxModule","PasswordModule","MessageService","ToastModule","ApiUrlInterceptor","options","AppModule","declarations","config","tokenGetter","jwtTokenGetter","loader","provide","useFactory","HttpLoaderFactory","deps","providers","useClass","multi","bootstrap","localStorage","getItem","auth_key_name","http","FormBuilder","Validators","Router","FormValidator","formBuilder","messageService","app","router","instant","createForm","formValidator","form","group","Login","required","Password","onSubmit","value","add","key","severity","summary","detail","data","login","subscribe","result","navigate","resetPassword","queryParams","UserPermissionEnum","Menu","LayoutService","AppFooterComponent","layoutService","Renderer2","ViewChild","NavigationEnd","filter","AppSidebarComponent","AppTopBarComponent","renderer","overlayMenuOpenSubscription","overlayOpen$","menuOutsideClickListener","listen","isOutsideClicked","appSidebar","el","nativeElement","isSameNode","target","contains","appTopbar","menuButton","hideMenu","profileMenuOutsideClickListener","menu","topbarMenuButton","hideProfileMenu","state","staticMenuMobileActive","blockBodyScroll","events","pipe","overlayMenuActive","menuHoverActive","unblockBodyScroll","profileSidebarVisible","document","body","classList","className","remove","replace","RegExp","split","join","containerClass","colorScheme","menuMode","staticMenuDesktopInactive","inputStyle","ngOnDestroy","unsubscribe","FormsModule","BrowserAnimationsModule","InputTextModule","SidebarModule","BadgeModule","RadioButtonModule","InputSwitchModule","RippleModule","AppMenuComponent","AppMenuitemComponent","AppConfigModule","menuService","use","x","buildMenu","forEach","model","getMenu","appendMenu","allMenuPermissions","Items","menuItem","Permissions","permission","push","isAuthorized","menuItems","label","Label","icon","Icon","routerLink","RouterLink","items","appendMenuItem","menuItemLabel","permissions","find","concat","Injectable","Subject","menuSource","asObservable","resetSource","onMenuStateChange","next","reset","providedIn","ChangeDetectorRef","HostBinding","Input","animate","style","transition","trigger","cd","menuSourceSubscription","menuSource$","Promise","resolve","then","routeEvent","active","startsWith","menuResetSubscription","resetSource$","params","item","updateActiveStateFromRoute","parentKey","index","String","activeRoute","isActive","paths","matrixParams","fragment","itemClick","disabled","command","originalEvent","submenuAnimation","root","activeClass","type","animations","height","ElementRef","AppConfigComponent","visible","configSidebarVisible","_val","scale","onConfigButtonClick","showConfigSidebar","changeTheme","theme","themeLink","getElementById","newHref","getAttribute","replaceThemeLink","onConfigUpdate","href","onComplete","id","cloneLinkElement","cloneNode","setAttribute","parentNode","insertBefore","nextSibling","addEventListener","decrementScale","applyScale","incrementScale","documentElement","fontSize","CommonModule","configUpdate","overlayOpen","onMenuToggle","isOverlay","isDesktop","showProfileSidebar","window","innerWidth","isMobile","canActivate","allowedPermissions","canActivateChild","resetAllData","Inject","PLATFORM_ID","isPlatformBrowser","Observable","of","map","catchError","httpClient","platformId","authData","url","username","password","grant_type","scope","post","res","token","code","CustomResponeCode","NotActice","setAuth","error","console","log","logout","refreshToken","tokenData","JSON","parse","Token","RefreshToken","auth","setItem","stringify","isLoggedIn$","removeItem","getAuth","i","JwtHelperService","jwtHelperService","AuthorizationService_1","currentUserId","_currentUserId","currentUserName","_currentUserName","currentUserRoles","_currentUserRoles","currentUserLanguageId","_currentUserLanguageId","currentUserRoleId","_currentUserRoleId","currentUserRoleName","_currentUserRoleName","currentUserPermissions","_currentUserPermissions","length","decodedToken","decodeToken","permissionsStr","str","Number","some","r","includes","currentUserPermissionsStr","undefined","intercept","req","apiReq","location","protocol","clone","host","apiUrl","handle","Injector","throwError","tap","injector","request","get","setHeaders","Authorization","status","isRefreshingToken","reload","message","initializeMenu","initializeMenuItems","m","Users_CanList","MenuService_1","ALL_MENU_URL_PREFIX","UserRoles_CanList","getFirstMenuItemUserIsAuthorizedFor","firstMenuUserIsAuthorizedFor","currentForm","getFormControl","name","isValid","e","valid","isChanged","dirty","touched","hasError","updateAllControlsToTouched","Object","keys","controls","markAsTouched","production","enableProdMode","platformBrowserDynamic","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}